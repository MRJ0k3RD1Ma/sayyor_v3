<?php

namespace client\controllers;

use client\models\InnForm;
use common\models\DistrictView;
use common\models\Individuals;
use common\models\LegalEntities;
use common\models\QfiView;
use common\models\Sertificates;
use common\models\VetSites;
use frontend\models\ResendVerificationEmailForm;
use frontend\models\VerifyEmailForm;
use Yii;
use yii\base\InvalidArgumentException;
use yii\web\BadRequestHttpException;
use yii\web\Controller;
use yii\filters\VerbFilter;
use yii\filters\AccessControl;
use common\models\LoginForm;
use frontend\models\PasswordResetRequestForm;
use frontend\models\ResetPasswordForm;
use frontend\models\SignupForm;
use frontend\models\ContactForm;

/**
 * Site controller
 */
class SiteController extends Controller
{
    /**
     * {@inheritdoc}
     */
    public function behaviors()
    {
        return [
            'access' => [
                'class' => AccessControl::className(),
                'only' => ['logout', 'signup'],
                'rules' => [
                    [
                        'actions' => ['signup'],
                        'allow' => true,
                        'roles' => ['?'],
                    ],
                    [
                        'actions' => ['logout'],
                        'allow' => true,
                        'roles' => ['@'],
                    ],
                ],
            ],
            'verbs' => [
                'class' => VerbFilter::className(),
                'actions' => [
                    'logout' => ['post'],
                ],
            ],
        ];
    }
    /**
     * {@inheritdoc}
     */
    public function actions()
    {
        return [
            'error' => [
                'class' => 'yii\web\ErrorAction',
            ],
            'captcha' => [
                'class' => 'yii\captcha\CaptchaAction',
                'fixedVerifyCode' => YII_ENV_TEST ? 'testme' : null,
            ],
        ];
    }

    public function beforeAction($action)
    {
        if($action->id != 'login' and
            $action->id != 'legal' and
            $action->id != 'getind' and
            $action->id != 'get-district' and
            $action->id != 'get-qfi'
        ){

            if(Yii::$app->session->has('doc_type')){
                if(!Yii::$app->session->has('doc_'.Yii::$app->session->get('doc_type'))){
                    header('Location: /client/site/login');
                    exit;
                }
            }else{
                header('Location: /client/site/login');
                exit;
            }
        }
        return parent::beforeAction($action); // TODO: Change the autogenerated stub
    }

    /**
     * Displays homepage.
     *
     * @return mixed
     */
    public function actionIndex()
    {
        return $this->render('index');
    }

    public function actionCreate($type = null){
        if($type){
            return $this->redirect(['/site/'.$type]);
        }
        return $this->render('create');
    }

    public function actionAnimal(){
        $model = new Sertificates();
        $ind = new Individuals();




        return $this->render('animal',['model'=>$model,'ind'=>$ind]);
    }

    public function actionLegal($inn,$name){
        $this->layout = 'update';
        if($model = LegalEntities::findOne(['inn'=>$inn])){
            Yii::$app->session->set('doc_type','inn');
            Yii::$app->session->set('doc_inn',$model->inn);
            Yii::$app->session->set('doc_name',$model->name);
            return $this->redirect(['index']);
        }else{
            $model = new LegalEntities();
            $model->name = $name;
            $model->inn = $inn;
            if($model->load(Yii::$app->request->post()) ){

                if($model->save()){
                    Yii::$app->session->set('doc_type','inn');
                    Yii::$app->session->set('doc_inn',$model->inn);
                    Yii::$app->session->set('doc_name',$model->name);
                    return $this->redirect(['index']);
                }
            }
            return $this->render('legal',['model'=>$model]);
        }
    }
    /**
     * Logs in a user.
     *
     * @return mixed
     */
    public function actionLogin()
    {
        $model = new InnForm();
        $this->layout = "login";
        $ind = new Individuals();
        $legal = new LegalEntities();
        if($model->load(Yii::$app->request->post())){
            if($model->type == 'inn'){
                if($legal->load(Yii::$app->request->post())){
                    // legal save yoziladi
                }
                Yii::$app->session->set('doc_type','inn');
                Yii::$app->session->set('doc_inn',$model->inn);
            }else{
                if($ind->load(Yii::$app->request->post())){
                    $in = Individuals::find()->where(['pnfl'=>$ind->pnfl])->andWhere(['passport'=>$ind->passport])->one();
                    $in->soato_id = $ind->soato_id;
                    $in->adress = $ind->adress;
                    $in->save();
                }
                Yii::$app->session->set('doc_type','pnfl');
                Yii::$app->session->set('doc_pnfl',$in->pnfl);
                Yii::$app->session->set('doc_document',$in->passport);
                Yii::$app->session->set('doc_name',$in->name.' '.$in->surname);
            }

            return $this->goHome();
        }
        return $this->render('login',[
            'model'=>$model,
            'ind'=>$ind,
            'legal'=>$legal
        ]);
    }

    public function actionGetind($passport,$pnfl){
        if($model = Individuals::find()->where(['passport'=>$passport])->andWhere(['pnfl'=>$pnfl])->one()){
            $res = "{";
            $res .= '"code":{"result":200},';
            $res .= '"data":{';
            $res .= '"inf":{';
            $res .= '"document":"'.$model->passport.'",';
            $res .= '"surname":"'.$model->surname.'",';
            $res .= '"name":"'.$model->name.'",';
            $res .= '"middlename":"'.$model->middlename.'",';
            $res .= '"pnfl":"'.$model->pnfl.'",';
            $res .= '"adress":"'.$model->adress.'",';
            $res .= '"region_id":"'.$model->soato->region_id.'",';
            $res .= '"district_id":"'.$model->soato->district_id.'",';
            $res .= '"soato_id":"'.$model->soato_id.'"';
            $res .= "}";
            $res .= "}";
            $res .= "}";
            return $res;
        }else{
            $res = get_web_page(Yii::$app->params['hamsa']['url']['getfizinfo'].'?pinfl='.$pnfl.'&document='.$passport,'hamsa');


            $res = json_decode($res,true);
            if($res['code']['result']!=2200){
                return "-1";
            }

            $model = new Individuals();
            $model->passport = $res['data']['inf']['document'];
            $model->surname = $res['data']['inf']['surname_latin'];
            $model->name = $res['data']['inf']['name_latin'];
            $model->middlename = $res['data']['inf']['patronym_latin'];
            $model->pnfl = $pnfl;
            $model->adress = '-';
            $model->soato_id = 1735401554;
            $model->save();
            $res = "{";
            $res .= '"code":{"result":200},';
            $res .= '"data":{';
            $res .= '"inf":{';
            $res .= '"document":"'.$model->passport.'",';
            $res .= '"surname":"'.$model->surname.'",';
            $res .= '"name":"'.$model->name.'",';
            $res .= '"middlename":"'.$model->middlename.'",';
            $res .= '"pnfl":"'.$model->pnfl.'",';
            $res .= '"adress":"'.$model->adress.'",';
            $res .= '"soato_id":"-1"';
            $res .= "}";
            $res .= "}";
            $res .= "}";
            return $res;
        }
    }
    /**
     * Logs out the current user.
     *
     * @return mixed
     */
    public function actionLogout()
    {
       Yii::$app->session->remove('doc_name');
       Yii::$app->session->remove('doc_type');
       Yii::$app->session->remove('doc_inn');
       Yii::$app->session->remove('doc_pnfl');
       Yii::$app->session->remove('doc_document');
        return $this->goHome();
    }

    /**
     * Displays contact page.
     *
     * @return mixed
     */
    public function actionContact()
    {
        $model = new ContactForm();
        if ($model->load(Yii::$app->request->post()) && $model->validate()) {
            if ($model->sendEmail(Yii::$app->params['adminEmail'])) {
                Yii::$app->session->setFlash('success', 'Thank you for contacting us. We will respond to you as soon as possible.');
            } else {
                Yii::$app->session->setFlash('error', 'There was an error sending your message.');
            }

            return $this->refresh();
        }

        return $this->render('contact', [
            'model' => $model,
        ]);
    }

    /**
     * Displays about page.
     *
     * @return mixed
     */
    public function actionAbout()
    {
        return $this->render('about');
    }

    /**
     * Signs user up.
     *
     * @return mixed
     */
    public function actionSignup()
    {
        $model = new SignupForm();
        if ($model->load(Yii::$app->request->post()) && $model->signup()) {
            Yii::$app->session->setFlash('success', 'Thank you for registration. Please check your inbox for verification email.');
            return $this->goHome();
        }

        return $this->render('signup', [
            'model' => $model,
        ]);
    }

    /**
     * Requests password reset.
     *
     * @return mixed
     */
    public function actionRequestPasswordReset()
    {
        $model = new PasswordResetRequestForm();
        if ($model->load(Yii::$app->request->post()) && $model->validate()) {
            if ($model->sendEmail()) {
                Yii::$app->session->setFlash('success', 'Check your email for further instructions.');

                return $this->goHome();
            }

            Yii::$app->session->setFlash('error', 'Sorry, we are unable to reset password for the provided email address.');
        }

        return $this->render('requestPasswordResetToken', [
            'model' => $model,
        ]);
    }

    /**
     * Resets password.
     *
     * @param string $token
     * @return mixed
     * @throws BadRequestHttpException
     */
    public function actionResetPassword($token)
    {
        try {
            $model = new ResetPasswordForm($token);
        } catch (InvalidArgumentException $e) {
            throw new BadRequestHttpException($e->getMessage());
        }

        if ($model->load(Yii::$app->request->post()) && $model->validate() && $model->resetPassword()) {
            Yii::$app->session->setFlash('success', 'New password saved.');

            return $this->goHome();
        }

        return $this->render('resetPassword', [
            'model' => $model,
        ]);
    }

    /**
     * Verify email address
     *
     * @param string $token
     * @throws BadRequestHttpException
     * @return yii\web\Response
     */
    public function actionVerifyEmail($token)
    {
        try {
            $model = new VerifyEmailForm($token);
        } catch (InvalidArgumentException $e) {
            throw new BadRequestHttpException($e->getMessage());
        }
        if (($user = $model->verifyEmail()) && Yii::$app->user->login($user)) {
            Yii::$app->session->setFlash('success', 'Your email has been confirmed!');
            return $this->goHome();
        }

        Yii::$app->session->setFlash('error', 'Sorry, we are unable to verify your account with provided token.');
        return $this->goHome();
    }

    /**
     * Resend verification email
     *
     * @return mixed
     */
    public function actionResendVerificationEmail()
    {
        $model = new ResendVerificationEmailForm();
        if ($model->load(Yii::$app->request->post()) && $model->validate()) {
            if ($model->sendEmail()) {
                Yii::$app->session->setFlash('success', 'Check your email for further instructions.');
                return $this->goHome();
            }
            Yii::$app->session->setFlash('error', 'Sorry, we are unable to resend verification email for the provided email address.');
        }

        return $this->render('resendVerificationEmail', [
            'model' => $model
        ]);
    }



    public function actionGetDistrict($id){
        $model = DistrictView::find()->where(['region_id'=>$id])->all();
        $text = Yii::t('cp.vetsites','- Tumanni tanlang -');
        $res = "<option value=''>{$text}</option>";
        $lang = Yii::$app->language;
        foreach ($model as $item){
            if($lang == 'ru'){
                $name = $item->name_ru;
            }elseif($lang == 'oz'){
                $name = $item->name_cyr;
            }else{
                $name = $item->name_lot;
            }
            $res .= "<option value='{$item->district_id}'>{$name}</option>";
        }
        echo $res;
        exit;
    }
    public function actionGetQfi($id,$regid){
        $model = QfiView::find()->where(['district_id'=>$id])->andWhere(['region_id'=>$regid])->all();
        $text = Yii::t('cp.vetsites','- QFYni tanlang -');
        $res = "<option value=''>{$text}</option>";
        $lang = Yii::$app->language;
        foreach ($model as $item){
            if($lang == 'ru'){
                $name = $item->name_ru;
            }elseif($lang == 'oz'){
                $name = $item->name_cyr;
            }else{
                $name = $item->name_lot;
            }
            $res .= "<option value='{$item->MHOBT_cod}'>{$name}</option>";
        }
        echo $res;
        exit;
    }

    public function actionGetVet($id){
        $model = VetSites::find()->where(['soato'=>$id])->all();
        $text = Yii::t('cp.vetsites','- Vet uchastkani tanlang -');
        $res = "<option value=''>{$text}</option>";
        $lang = Yii::$app->language;
        foreach ($model as $item){
            $res .= "<option value='{$item->id}'>{$item->name}</option>";
        }
        echo $res;
        exit;
    }
}
